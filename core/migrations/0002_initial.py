# Generated by Django 4.2.3 on 2023-10-07 11:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('poll', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='searched_polls',
            field=models.ManyToManyField(blank=True, related_name='users_searched', to='poll.poll'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='stickers',
            field=models.ManyToManyField(related_name='sticking', to='core.userprofile'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reporteduser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='otpreceiver',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='device',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='businessaccount',
            name='business_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Address', to='core.address', verbose_name='Business Address'),
        ),
        migrations.AddField(
            model_name='businessaccount',
            name='business_availability',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.businessavailability'),
        ),
        migrations.AddField(
            model_name='businessaccount',
            name='business_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.businesscategory'),
        ),
        migrations.AddField(
            model_name='businessaccount',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile'),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='blocked_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='blocker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usermodel',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usermodel',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='blockeduser',
            unique_together={('blocker', 'blocked_user')},
        ),
        migrations.AddConstraint(
            model_name='usermodel',
            constraint=models.UniqueConstraint(condition=models.Q(('email__isnull', False), ('phone__isnull', False), _connector='OR'), fields=('email', 'phone'), name='unique_email_or_phone'),
        ),
    ]
